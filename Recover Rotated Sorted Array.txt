Easy Recover Rotated Sorted Array Show Result My Submissions

Given a rotated sorted array, recover it to sorted array in-place.

Example
[4, 5, 1, 2, 3] -> [1, 2, 3, 4, 5]

Challenge Expand 
In-place, O(1) extra space and O(n) time.

Clarification Expand 
What is rotated array:

    - For example, the orginal array is [1,2,3,4], The rotated array of it can be [1,2,3,4], [2,3,4,1], [3,4,1,2], [4,1,2,3]

--------------------------------------------------

Note: 三步翻转法。

4 5 ，1 2 3
---------
5 4 ，3 2 1
---------
1 2 3 4 5


import java.util.ArrayList;


public class Solution {
    /**
     * @param nums: The rotated sorted array
     * @return: The recovered sorted array
     */
    public void recoverRotatedSortedArray(ArrayList<Integer> nums) {
        int pivot = -1;
        if (nums.size() <= 1) {
            return;
        }
        for (int i = 0; i < nums.size() - 1; i++) {
            if (nums.get(i) > nums.get(i + 1)) {
                pivot = i + 1;
            }
        }
        if (pivot == -1) {
            return;
        }
        int temp;
        for (int i = 0; i < pivot / 2; i++) {
            temp = nums.get(i);
            nums.set(i, nums.get(pivot - 1 - i));
            nums.set(pivot - 1 - i, temp);
        }
        int t;
        for (int i = pivot; i < (nums.size() + pivot) / 2; i++) {
            t = nums.get(i);
            nums.set(i, nums.get(nums.size() - 1 - i + pivot));
            nums.set(nums.size() - 1 - i + pivot, t);
        }
        int t1;
        for (int i = 0; i < nums.size() / 2; i++) {
            t1 = nums.get(i);
            nums.set(i, nums.get(nums.size() - 1 - i));
            nums.set(nums.size() - 1 - i, t1);
        }
    }
}